// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios12.1 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name VDLimits
import AVFoundation
import AVKit
import AudioToolbox
import CommonCrypto/*.CC_LONG*/
import CommonCrypto/*.CC_MD5*/
import CommonCrypto/*.CC_MD5_DIGEST_LENGTH*/
import CoreFoundation
import CryptoKit
import Foundation
import NotificationCenter
import PDFKit
import PhotosUI
import QuartzCore
import Security
import Swift
import UIKit.UIGestureRecognizerSubclass
import UIKit
public enum VDResponse {
  case approved(limit: Swift.Double, expiration: Swift.String)
  case rejected
  case waiting
}
public enum VDResult {
  case approved
  case rejected
  case waiting
  public static func == (a: VDLimits.VDResult, b: VDLimits.VDResult) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
}
public protocol VDLimitsProtocol : AnyObject {
  func vdLimitsResult(_ response: VDLimits.VDResponse)
  func vdLimitsError(message error: Swift.String)
  func vdLimitsDismiss(from: VDLimits.VDResult)
}
public class VDLimits {
  public struct Config {
    public init(apiKey: Swift.String, apiSecret: Swift.String, userNumber: Swift.String, userId: Swift.String, needAuth: Swift.Bool = true)
  }
  public init(with config: VDLimits.VDLimits.Config, delegate: VDLimits.VDLimitsProtocol?)
  public func start(with navController: UIKit.UINavigationController? = nil)
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class VDTheme {
  public static var defaultTheme: VDLimits.VDTheme
  final public var primaryBackgroundColor: UIKit.UIColor
  final public var secondaryBackgroundColor: UIKit.UIColor
  final public var primaryForegroundColor: UIKit.UIColor
  final public var secondaryForegroundColor: UIKit.UIColor
  final public var accentColor: UIKit.UIColor
  final public var errorColor: UIKit.UIColor
  final public var fontRegular: UIKit.UIFont
  final public var fontMedium: UIKit.UIFont
  final public var fontSemiBold: UIKit.UIFont
  final public var fontBold: UIKit.UIFont
  @objc deinit
}
